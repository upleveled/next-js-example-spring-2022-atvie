"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const mocha_1 = require("mocha");
const case_1 = require("./case");
(0, mocha_1.describe)("case", () => {
    (0, mocha_1.test)("toCamelCase", () => {
        assert_1.default.equal((0, case_1.toCamelCase)("foo"), "foo");
        assert_1.default.equal((0, case_1.toCamelCase)("foo-bar"), "fooBar");
        assert_1.default.equal((0, case_1.toCamelCase)("foo_bar"), "fooBar");
        assert_1.default.equal((0, case_1.toCamelCase)("foo-bar_baz"), "fooBarBaz");
        assert_1.default.equal((0, case_1.toCamelCase)("foo_bar-baz"), "fooBarBaz");
        assert_1.default.equal((0, case_1.toCamelCase)("foo-bar_baz-qux"), "fooBarBazQux");
        assert_1.default.equal((0, case_1.toCamelCase)("foo_bar-baz_qux"), "fooBarBazQux");
    });
    (0, mocha_1.test)("toPascalCase", () => {
        assert_1.default.equal((0, case_1.toPascalCase)("foo"), "Foo");
        assert_1.default.equal((0, case_1.toPascalCase)("foo-bar"), "FooBar");
        assert_1.default.equal((0, case_1.toPascalCase)("foo_bar"), "FooBar");
        assert_1.default.equal((0, case_1.toPascalCase)("foo-bar_baz"), "FooBarBaz");
        assert_1.default.equal((0, case_1.toPascalCase)("foo_bar-baz"), "FooBarBaz");
        assert_1.default.equal((0, case_1.toPascalCase)("foo-bar_baz-qux"), "FooBarBazQux");
        assert_1.default.equal((0, case_1.toPascalCase)("foo_bar-baz_qux"), "FooBarBazQux");
    });
    (0, mocha_1.test)("toSnakeCase", () => {
        assert_1.default.equal((0, case_1.toSnakeCase)("Foo"), "foo");
        assert_1.default.equal((0, case_1.toSnakeCase)("FooBar"), "foo_bar");
        assert_1.default.equal((0, case_1.toSnakeCase)("foo"), "foo");
        assert_1.default.equal((0, case_1.toSnakeCase)("fooBar"), "foo_bar");
        assert_1.default.equal((0, case_1.toSnakeCase)("fooBarBaz"), "foo_bar_baz");
        assert_1.default.equal((0, case_1.toSnakeCase)("fooBarBazQux"), "foo_bar_baz_qux");
    });
    (0, mocha_1.test)("toScreamingSnakeCase", () => {
        assert_1.default.equal((0, case_1.toScreamingSnakeCase)("foo"), "FOO");
        assert_1.default.equal((0, case_1.toScreamingSnakeCase)("fooBar"), "FOO_BAR");
        assert_1.default.equal((0, case_1.toScreamingSnakeCase)("fooBarBaz"), "FOO_BAR_BAZ");
        assert_1.default.equal((0, case_1.toScreamingSnakeCase)("fooBarBazQux"), "FOO_BAR_BAZ_QUX");
    });
});
//# sourceMappingURL=case.test.js.map